package vb.$commandsimplifier;
import java.io.*;
import java.nio.file.*;
import java.util.*;
import org.bukkit.*;
import org.bukkit.block.*;
import org.bukkit.command.*;
import org.bukkit.entity.*;
import org.bukkit.event.*;
import org.bukkit.inventory.*;
import org.bukkit.inventory.meta.*;
import org.bukkit.plugin.java.*;
import org.bukkit.util.*;

public class PluginMain extends JavaPlugin implements Listener {

	private static PluginMain instance;
	private static Object localVariableScope = new Object();

	public void onEnable() {
		instance = this;
		getDataFolder().mkdir();
		getServer().getPluginManager().registerEvents(this, this);
		Object localVariableScope = new Object();
		PluginMain.createResourceFile("commands.txt");
		saveDefaultConfig();
		try {
			Bukkit.getConsoleSender().sendMessage(PluginMain.color("[Command Simplifier] Plugin enabled"));
			Bukkit.getConsoleSender().sendMessage(PluginMain.color("[Command Simplifier] Loading Commands:"));
			Bukkit.getConsoleSender().sendMessage(PluginMain.color("[Command Simplifier] Enchants Loaded"));
			Bukkit.getConsoleSender().sendMessage(PluginMain.color("[Command Simplifier] Gamemodes Loaded"));
			Bukkit.getConsoleSender().sendMessage(PluginMain.color("[Command Simplifier] Times Loaded"));
			Bukkit.getConsoleSender().sendMessage(PluginMain.color("[Command Simplifier] Other Commands Loaded"));
			Bukkit.getConsoleSender()
					.sendMessage(PluginMain.color("[Command Simplifier] All Commands loaded with no errors"));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void onDisable() {
		try {
			Bukkit.getConsoleSender().sendMessage(PluginMain.color("[Command Simplifier] Plugin disabled"));
			Bukkit.getConsoleSender().sendMessage(PluginMain.color("[Command Simplifier] Thanks for using"));
			Bukkit.getConsoleSender().sendMessage(PluginMain.color("[Command Simplifier] Leave a rating on Spigot.mc"));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public boolean onCommand(CommandSender commandSender, Command command, String label, String[] commandArgs) {
		if (command.getName().equalsIgnoreCase("walkspeed")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).setWalkSpeed(((float) 5d));
				commandSender.sendMessage(PluginMain.color("Walkspeed now 5"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("flyspeed")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).setFlySpeed(((float) 5d));
				commandSender.sendMessage(PluginMain.color("Flyspeed now 5"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("am")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).getInventory().getItemInMainHand().setAmount(((int) 64d));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("dur")) {
			try {
				Object localVariableScope = new Object();
				PluginMain.setDurability(((org.bukkit.entity.Player) commandSender).getInventory().getItemInMainHand(),
						((int) 1000d));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("broad")) {
			try {
				Object localVariableScope = new Object();
				Bukkit.broadcastMessage(PluginMain.color(PluginMain.getCommandArg(commandArgs, ((int) 0d))));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("nick")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender)
						.setDisplayName(PluginMain.getCommandArg(commandArgs, ((int) 0d)));
				commandSender.sendMessage(PluginMain.color("Nicked successfully"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("heal")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).setHealthScale(100d);
				commandSender.sendMessage(PluginMain.color("Your now healthy"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("rename")) {
			try {
				Object localVariableScope = new Object();
				PluginMain.setItemName(((org.bukkit.entity.Player) commandSender).getInventory().getItemInMainHand(),
						PluginMain.getCommandArg(commandArgs, ((int) 0d)));
				commandSender.sendMessage(PluginMain.color("Rename successfully"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("setlore")) {
			try {
				Object localVariableScope = new Object();
				PluginMain.setItemLore(((org.bukkit.entity.Player) commandSender).getInventory().getItemInMainHand(),
						PluginMain.createList(commandArgs));
				commandSender.sendMessage(PluginMain.color("Itemlore set successfully"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("morning")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Entity) commandSender).getWorld().setTime(((long) 1000d));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("night")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Entity) commandSender).getWorld().setTime(((long) 18000d));
				commandSender.sendMessage(PluginMain.color("Time changed to night"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("day")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Entity) commandSender).getWorld().setTime(((long) 6000d));
				commandSender.sendMessage(PluginMain.color("Time changed to day"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("gms")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).setGameMode(org.bukkit.GameMode.SURVIVAL);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("gmsp")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).setGameMode(org.bukkit.GameMode.SPECTATOR);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("gma")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).setGameMode(org.bukkit.GameMode.ADVENTURE);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("gmc")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).setGameMode(org.bukkit.GameMode.CREATIVE);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("enc-oxy")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).getInventory().getHelmet()
						.addUnsafeEnchantment(org.bukkit.enchantments.Enchantment.OXYGEN, ((int) 5d));
				commandSender.sendMessage(PluginMain.color("Enchant Successfully"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("xplvl1000")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).setLevel(((int) 1000d));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("enc-inf")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).getInventory().getItemInMainHand()
						.addUnsafeEnchantment(org.bukkit.enchantments.Enchantment.ARROW_INFINITE, ((int) 1d));
				commandSender.sendMessage(PluginMain.color("Enchant Successfully"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("enc-afr")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).getInventory().getItemInMainHand()
						.addUnsafeEnchantment(org.bukkit.enchantments.Enchantment.ARROW_FIRE, ((int) 1d));
				commandSender.sendMessage(PluginMain.color("Enchant Successfully"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("enc-skt")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).getInventory().getItemInMainHand()
						.addUnsafeEnchantment(org.bukkit.enchantments.Enchantment.SILK_TOUCH, ((int) 5d));
				commandSender.sendMessage(PluginMain.color("Enchant Successfully"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("enc-fll")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).getInventory().getBoots()
						.addUnsafeEnchantment(org.bukkit.enchantments.Enchantment.PROTECTION_FALL, ((int) 8d));
				commandSender.sendMessage(PluginMain.color("Enchant Successfully"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("enc-efc")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).getInventory().getItemInMainHand()
						.addUnsafeEnchantment(org.bukkit.enchantments.Enchantment.DIG_SPEED, ((int) 10d));
				commandSender.sendMessage(PluginMain.color("Enchant Successfully"));
				commandSender.sendMessage(PluginMain.color("WARNING: Be Careful with that. It might be a bit laggy"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("enc-fir")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).getInventory().getItemInMainHand()
						.addUnsafeEnchantment(org.bukkit.enchantments.Enchantment.FIRE_ASPECT, ((int) 5d));
				commandSender.sendMessage(PluginMain.color("Enchant Successfully"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("enc-thr")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).getInventory().getChestplate()
						.addUnsafeEnchantment(org.bukkit.enchantments.Enchantment.THORNS, ((int) 15d));
				commandSender.sendMessage(PluginMain.color("Enchant Successfully"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("enc-prp")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).getInventory().getChestplate()
						.addUnsafeEnchantment(org.bukkit.enchantments.Enchantment.PROTECTION_EXPLOSIONS, ((int) 5d));
				((org.bukkit.entity.Player) commandSender).getInventory().getChestplate()
						.addUnsafeEnchantment(org.bukkit.enchantments.Enchantment.PROTECTION_FIRE, ((int) 5d));
				((org.bukkit.entity.Player) commandSender).getInventory().getChestplate()
						.addUnsafeEnchantment(org.bukkit.enchantments.Enchantment.PROTECTION_PROJECTILE, ((int) 5d));
				commandSender.sendMessage(PluginMain.color("Enchant Successfully"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("enc-loot")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).getInventory().getItemInMainHand()
						.addUnsafeEnchantment(org.bukkit.enchantments.Enchantment.LOOT_BONUS_BLOCKS, ((int) 5d));
				((org.bukkit.entity.Player) commandSender).getInventory().getItemInMainHand()
						.addUnsafeEnchantment(org.bukkit.enchantments.Enchantment.LOOT_BONUS_MOBS, ((int) 5d));
				commandSender.sendMessage(PluginMain.color("Enchant Successfully"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("enc-knk")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).getInventory().getItemInMainHand()
						.addUnsafeEnchantment(org.bukkit.enchantments.Enchantment.KNOCKBACK, ((int) 10d));
				commandSender.sendMessage(PluginMain.color("Enchant Successfully"));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("xplvl100")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).setLevel(((int) 100d));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		if (command.getName().equalsIgnoreCase("xplvl10")) {
			try {
				Object localVariableScope = new Object();
				((org.bukkit.entity.Player) commandSender).setLevel(((int) 10d));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		return true;
	}

	public static void procedure(String procedure, List<?> procedureArgs) throws Exception {
	}

	public static Object function(String function, List<?> functionArgs) throws Exception {
		return null;
	}

	public static List<Object> createList(Object obj) {
		List<Object> list = new ArrayList<>();
		if (obj.getClass().isArray()) {
			int length = java.lang.reflect.Array.getLength(obj);
			for (int i = 0; i < length; i++) {
				list.add(java.lang.reflect.Array.get(obj, i));
			}
		} else if (obj instanceof Collection<?>) {
			list.addAll((Collection<?>) obj);
		} else {
			list.add(obj);
		}
		return list;
	}

	public static String color(String string) {
		return string != null ? ChatColor.translateAlternateColorCodes('&', string) : null;
	}

	public static void createResourceFile(String path) {
		Path file = getInstance().getDataFolder().toPath().resolve(path);
		if (Files.notExists(file)) {
			try (InputStream inputStream = PluginMain.class.getResourceAsStream("/" + path)) {
				Files.createDirectories(file.getParent());
				Files.copy(inputStream, file);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}

	public static PluginMain getInstance() {
		return instance;
	}

	public static String getCommandArg(String[] args, int i) {
		return args.length > i ? args[i] : null;
	}

	public static void setItemName(ItemStack item, String name) {
		ItemMeta itemMeta = item.getItemMeta();
		if (itemMeta != null) {
			itemMeta.setDisplayName(PluginMain.color(name));
			item.setItemMeta(itemMeta);
		}
	}

	public static void setItemLore(ItemStack item, List lore) {
		ItemMeta itemMeta = item.getItemMeta();
		if (itemMeta != null) {
			List<String> coloredLore = new ArrayList<>(lore.size());
			for (Object obj : lore) {
				coloredLore.add(PluginMain.color((String) obj));
			}
			itemMeta.setLore(coloredLore);
			item.setItemMeta(itemMeta);
		}
	}

	public static void setDurability(ItemStack item, int damage) {
		ItemMeta itemMeta = item.getItemMeta();
		if (itemMeta instanceof org.bukkit.inventory.meta.Damageable) {
			((org.bukkit.inventory.meta.Damageable) itemMeta).setDamage(damage);
			item.setItemMeta(itemMeta);
		}
	}
}
